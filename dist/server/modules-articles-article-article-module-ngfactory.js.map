{"version":3,"sources":["webpack:///./node_modules/@angular/material/card/typings/index.d.ts.MatCard.html","webpack:///./node_modules/@angular/material/card/typings/index.d.ts.MatCardHeader.html","webpack:///./node_modules/@angular/material/card/typings/index.d.ts.MatCardTitleGroup.html","webpack:///./src/app/modules/articles/article/article-routing.module.ts","webpack:///./src/app/modules/articles/article/article.component.html","webpack:///./src/app/modules/articles/article/article.component.ts","webpack:///./src/app/modules/articles/article/article.module.ts","webpack:///./src/app/modules/articles/articles.service.ts"],"names":[],"mappings":"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","file":"modules-articles-article-article-module-ngfactory.js","sourcesContent":["<ng-content></ng-content><ng-content select=\"mat-card-footer\"></ng-content>","<ng-content select=\"[mat-card-avatar], [matCardAvatar]\"></ng-content><div class=\"mat-card-header-text\"><ng-content select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content></div><ng-content></ng-content>","<div><ng-content select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content></div><ng-content select=\"img\"></ng-content><ng-content></ng-content>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ArticleComponent } from './article.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ArticleComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ArticleRoutingModule { }\n","<section class=\"article\">\n  <mat-card class=\"card\">\n    <mat-card-header>\n      <mat-card-title>\n        {{ article?.title }}\n      </mat-card-title>\n    </mat-card-header>\n    <img\n      mat-card-image\n      [src]=\"article?.img\"\n      alt=\"Photo of a Shiba Inu\"\n    />\n    <mat-card-content>\n      <p>{{ article?.body }}</p>\n    </mat-card-content>\n  </mat-card>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MetaService } from 'src/app/shared/services/meta.service';\n\nimport { ArticlesService } from '../articles.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-article',\n  templateUrl: './article.component.html',\n  styleUrls: ['./article.component.scss']\n})\nexport class ArticleComponent implements OnInit {\n\n  public article: any = {};\n\n  constructor(\n    private route: ActivatedRoute,\n    private service: ArticlesService,\n    private meta: MetaService\n  ) { }\n\n  ngOnInit() {\n    this.getById();\n  }\n\n  private getById() {\n    let id = this.route.snapshot.paramMap.get('id');\n    if (id !== undefined) {\n      this.service.getById(id).then(\n        article => {\n          this.article = article;\n          this.article.img = environment.site_url + `assets/${(Math.floor(Math.random() * 3)).toString()}.jpeg`;\n          this.meta.updateTitle(this.article.title, this.article.body);\n          this.meta.updateMetaFB(this.article.title, this.article.img, this.article.body);\n        }\n      );\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { ArticleRoutingModule } from './article-routing.module';\nimport { ArticleComponent } from './article.component';\n\n@NgModule({\n  declarations: [ArticleComponent],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    ArticleRoutingModule\n  ]\n})\nexport class ArticleModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticlesService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * getAll\n   */\n  public getAll() {\n    return this.http.get(environment.articles).toPromise();\n  }\n\n  public getById(id){\n    return this.http.get(environment.articles + `/${id}`).toPromise();\n  }\n\n}\n"],"sourceRoot":""}